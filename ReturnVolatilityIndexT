def ReturnVolatilityIndexT(dataset, endDate, startDate = '2019-01-01', method = ''):
    
        dataset = dataset.loc[startDate:endDate, ]
        if method == 'all':
            portfolio = ''
            Return, Volatility = ReturnVolatilityT(dataset)
        if method == '' or method == 'km' or method == 'hc':
            data = returnAndVolatility(dataset, startDate, endDate)
            if method == 'km' or method == 'hc':
                bestSharpeRatio = 0
                numberCluster = 0

                for n_cluster in range(10, 40):
                    portfolio = selectAssets(data, n_cluster, method)
                    bestSharpeRatioStep = SharpeRatioT(dataset, portfolio)

                    if bestSharpeRatioStep >= bestSharpeRatio:
                        bestSharpeRatio = bestSharpeRatioStep
                        numberCluster = n_cluster

                #print ('Best numberCluster:', numberCluster)
                portfolio = selectAssets(data, numberCluster, method)
                Return, Volatility = ReturnVolatilityT(dataset, portfolio)
            if method == '':
                portfolio = selectAssets(data)
                Return, Volatility = ReturnVolatilityT(dataset, portfolio)
        return Return, Volatility
